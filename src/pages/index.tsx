import Head from 'next/head'
import 'flowbite'
import styles from '@/styles/Home.module.css'

import { useState } from 'react'
import { useAutoAnimate } from '@formkit/auto-animate/react'
import { fetcher } from '@/utils/utils'
import { Form } from '@/component/Form'
import { Background } from '@/component/Background'
import { CardImage } from '@/component/CardImage'
import { ModalEditor } from '@/component/ModalEditor'
import { ResultBanner } from '@/component/ResultBanner'
import { type Response } from '@/lib/getAssetsNode'
import { CloudinaryIcon } from '@/component/icons/cloudinary'
import { Loading } from '@/component/Loading'

export default function Home({ data }: { data: string[] }) {
  const pagesUrl = '/api/pages'
  const [dataTest, setDataTest] = useState<Response>()
  const [showModal, setShowModal] = useState<boolean>(false)
  const [isLoading, setIsLoading] = useState<boolean>(false)
  const [selectedSrc, setSelectedSrc] = useState<string>('')
  const [parent] = useAutoAnimate(/* optional config */)

  const handleSubmit = async (event) => {
    event.preventDefault()
    const url = event.target.url.value
    setIsLoading(true)
    const test = await fetcher(pagesUrl, {
      method: 'POST',
      body: JSON.stringify({ url })
    })
    setIsLoading(false)
    setDataTest(test)
  }

  const handleOnImageClick = (img: string) => {
    setShowModal(true)
    setSelectedSrc(img)
  }

  const handleOnCloseModal = () => {
    console.log('close')
    setShowModal(false)
  }

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="isolate bg-white">
        <Background>
          {/* <main> */}
          <div className="mx-auto max-w-6xl py-28 sm:py-36 lg:py-42 flex justify-center">
            <div className="text-center max-w-4xl">
              <h1 className="text-4xl font-bold tracking-tight text-gray-900 sm:text-6xl">
                Optimize your website images
              </h1>
              <p className="mt-6 text-lg leading-8 text-gray-600">
                Introduce your website URL and see how you can improve your
                images
              </p>
              <div className="mt-24">
                <Form isLoading={isLoading} onSubmit={handleSubmit} />
              </div>
              <p className="mt-6 text-sm leading-8 text-gray-600 flex justify-center items-center gap-4">
                Powered by <CloudinaryIcon />
              </p>
            </div>
          </div>
          {isLoading && (
            <div className="w-full flex justify-center">
              <Loading className={'w-12'} />
            </div>
          )}
          {!isLoading && dataTest && (
            <>
              <ResultBanner
                optimization={dataTest.optimization}
                size={dataTest.totalSize}
                sizeOptimized={dataTest.totalOptimizedSize}
              />
              <div ref={parent} className={styles.grid}>
                {dataTest.detail?.map((item, i) => {
                  return (
                    <CardImage
                      key={`image-${i}`}
                      image={item}
                      onClick={() => {
                        handleOnImageClick(item.src)
                      }}
                    ></CardImage>
                  )
                })}
              </div>
              <ModalEditor
                show={showModal}
                onClose={handleOnCloseModal}
                src={selectedSrc}
              />
            </>
          )}
        </Background>
      </div>
    </>
  )
}
